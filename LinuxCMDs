d /# Switch user
sudo su

# file listing
ls -larth
ls -larth ./newdir

# Get all project
htop

# Grep
pip list | grep abc
pip list | grep -i abc    ; Case insensitive

# Get all running process
ps -afe | grep celery
ps -ef | less    ; e - list of process currently running; -f fewer info
ps -aux | less   ; a - all users ; u - detail information about each process; x - adds demons process

# Create virtual environment
virtual dqenv

# Get list of all users
cat /etc/passwd

# Print in a formatted way
awk -F: '{print $1}' /etc/passwd

# Run celery:

celery worker -A webapp.sli_celery -Q SLI_COMPUTE -c 2 -Ofair  --loglevel=warning -f celery.logs --pool=solo - concurrency
celery worker -A webapp.sli_celery -Q SLI_COMPUTE -Ofair  --loglevel=warning -f celery.logs --pool=solo -  no concurrency

celery worker -A webapp.sli_celery -Q SLI_PUBLISH -Ofair  --loglevel=warning -f celery.logs --pool=solo

celery worker -A webapp.sli_celery -Q SLI_UPDATE -Ofair --loglevel=warning -f celery.logs --pool=solo


# Run Scheduler and celery
celery -A data_validation.dv_scheduler beat --loglevel=info -f /var/log/dqcheck/celery-beat.logs
celery -A data_validation.dv_scheduler worker -Q DATA_VALIDATION -c 2 -Ofair --loglevel=info -f /var/logs/dqcheck/celery-worker.logs

# Kill Celery
ps aux|grep 'celery worker'
sudo kill -9 process_id # here 29042
sudo kill -9 id1 id2 id3 ...
ps auxww | grep 'celery worker' | awk '{print $2}' | xargs kill -9

# Remove directory
rm -r dirname

# Remove files
rm filename1 filename2
rm *.pdf

# Get all environment variables
printenv | grep sli_lines

# Search process in linux
ps -ef | grep '' | grep -v grep

# Find and delete in linux
find ../ | grep *.pid | xargs rm -f

# Give permission to user
sudo chmod 777 -R _src_

# Linux command history
history

# Celery Health Check
celery inspect ping -A data_validation.dv_scheduler -d celery@$HOSTNAME

# Inspect celery worker
celery -A data_validation.dv_scheduler inspect active

# Insepct scheduler


# Connecting to redis
redis-cli -h 192.168.3.62 -p 6379 -n DATABASE_NUMBER


# Purge any specific Queue
celery ampq queue.purge <QueueName>

# Purge celery tasks
celery -A data_validation.dv_scheduler purge

# Get your ubuntu version
lsb_release -a

# To get linux username
whoami

# Go to the end of the vi file
shift + g



https://serverfault.com/questions/947726/how-to-use-json-keys-with-google-cloud-gsutil-to-manage-multiple-keys
https://serverfault.com/questions/612672/how-do-i-access-a-google-cloud-storage-bucket-using-a-service-account-from-the-c

# Activate glcound using service account json file:
gcloud auth activate-service-account --key-file /home/rupesh/VA/AlphaPublish/ap1/alphapublish/va-ins-dev-28f3257cd06d.json

# Set project for the goole cloud
gcloud config set project va-ins-dev

# List files inside bucket
gsutil ls gs://alphapublish


# Change User
su jenkins

# Change owner
sudo chown -R rupesh:rupesh source

# Get userid
echo $UID

# Give permission to a user on a folder
chown -R jenkins:jenkins /var/logs/alphapublish


# Add user
adduser jenkins

# Change password
sudo passwd username

# Add user to sudo group
sudo usermod -aG sudo username

# Remove linux users
userdel username

# To delete it's folder also
userdel -r username


# Another proxmos
192.168.13.44
engg
engg1234

jenkins users
pwd - alpha123


parikshit proxmos ip - 192.168.13.28
pwd - alpha1234


# Supervisor install
sudo apt-get install supervisor
supervisord --version
supervisorctl - list all the services running

Start service
service supervisor start

# Setting environment variables
vi /ect/environment

source /etc/environment

# Connection to MySQL
mysqldump -h dev-dapdb.visiblealpha.com -u engg -pengg1234 databasename

# Create file in Linux
touch filename

# Get filesize
du -hs /path/to/directory
